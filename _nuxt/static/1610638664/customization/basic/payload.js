__NUXT_JSONP__("/customization/basic", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au){return {data:[{document:{slug:"basic",title:"Basic",description:"",position:10,category:"Customization",toc:[{id:ag,depth:H,text:ah},{id:ai,depth:H,text:aj},{id:ak,depth:H,text:"Override description"},{id:al,depth:H,text:am}],body:{type:"root",children:[{type:b,tag:I,props:{id:ag},children:[{type:b,tag:J,props:{ariaHidden:K,href:"#covered-fields",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ah}]},{type:a,value:f},{type:b,tag:D,props:{},children:[{type:a,value:"You can define a list of covered fields for your model GraphQL endpoint. It will expose everything except those which are defined to be covered:"}]},{type:a,value:f},{type:b,tag:O,props:{className:[P]},children:[{type:b,tag:Q,props:{className:[r,R]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,X,r]},children:[{type:b,tag:c,props:{className:[d,Y,Z]},children:[{type:a,value:_}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:$}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:S}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:an}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ad}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ao}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"$covered"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:y}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,p,n]},children:[{type:a,value:"'password'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:f}]}]}]}]},{type:a,value:f},{type:b,tag:I,props:{id:ai},children:[{type:b,tag:J,props:{ariaHidden:K,href:"#exposed-fields",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:aj}]},{type:a,value:f},{type:b,tag:D,props:{},children:[{type:a,value:"You can define a list of exposed fields for your model GraphQL endpoint. It will not allow any other field to be exposed except those which are defined:"}]},{type:a,value:f},{type:b,tag:O,props:{className:[P]},children:[{type:b,tag:Q,props:{className:[r,R]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,X,r]},children:[{type:b,tag:c,props:{className:[d,Y,Z]},children:[{type:a,value:_}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:$}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:S}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:an}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ad}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ao}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"$exposed"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:y}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,p,n]},children:[{type:a,value:"'id'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,p,n]},children:[{type:a,value:"'name'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,p,n]},children:[{type:a,value:"'email'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:f}]}]}]}]},{type:a,value:f},{type:b,tag:I,props:{id:ak},children:[{type:b,tag:J,props:{ariaHidden:K,href:"#override-description",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:"Override "},{type:b,tag:o,props:{},children:[{type:a,value:"description"}]}]},{type:a,value:f},{type:b,tag:D,props:{},children:[{type:a,value:"Create a new method called "},{type:b,tag:o,props:{},children:[{type:a,value:"set[operation]Description"}]},{type:a,value:" and return a string to override description. available "},{type:b,tag:o,props:{},children:[{type:a,value:"operations"}]},{type:a,value:" are:"}]},{type:a,value:f},{type:b,tag:"ul",props:{},children:[{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"ResultAggregateType"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"FieldAggregateUnresolvableType"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"FieldAggregateType"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"AggregateType"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:V}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"UpdateMutation"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"InsertMutation"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"DeleteMutation"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"UpdateByPkMutation"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"DeleteByPkMutation"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"InsertOneMutation"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"ByPkQuery"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"AggregateQuery"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"Query"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"MutationInput"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"OrderInput"}]},{type:a,value:f},{type:b,tag:i,props:{},children:[{type:a,value:"Input"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:O,props:{className:[P]},children:[{type:b,tag:Q,props:{className:[r,R]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:u}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"setQueryDescription"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:F}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ae}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,p,n]},children:[{type:a,value:"'new desription'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:I,props:{id:al},children:[{type:b,tag:J,props:{ariaHidden:K,href:"#add-optional-fields",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:am}]},{type:a,value:f},{type:b,tag:D,props:{},children:[{type:a,value:"You can add optional fields or override a field completely by defining "},{type:b,tag:o,props:{},children:[{type:a,value:aq}]},{type:a,value:" method in your Pepper class for a corresponding model in your application. An example could be something like below:"}]},{type:a,value:f},{type:b,tag:O,props:{className:[P]},children:[{type:b,tag:Q,props:{className:[r,R]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,X,r]},children:[{type:b,tag:c,props:{className:[d,Y,Z]},children:[{type:a,value:_}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:$}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:S}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:S}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"Definition"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"Post"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ad}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:u}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:F}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:G}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ae}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,p,n]},children:[{type:a,value:"'cover_url'"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,p,n]},children:[{type:a,value:"'type'"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,"scope"]},children:[{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"::"}]}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:F}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,p,n]},children:[{type:a,value:"'selectable'"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,"boolean","constant"]},children:[{type:a,value:"false"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,p,n]},children:[{type:a,value:"'resolve'"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:u}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:F}]},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"refresh"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:F}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ae}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,"property"]},children:[{type:a,value:"cover"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:B}]},{type:a,value:m}]}]}]}]},{type:a,value:f},{type:b,tag:D,props:{},children:[{type:a,value:"In this example, we have defined a new "},{type:b,tag:o,props:{},children:[{type:a,value:"cover_url"}]},{type:a,value:" property that returns the cover value as a string."}]}]},dir:"\u002Fen\u002Fcustomization",path:"\u002Fen\u002Fcustomization\u002Fbasic",extension:".md",createdAt:au,updatedAt:au,to:"\u002Fcustomization\u002Fbasic"},prev:{slug:"privacy",title:"Privacy",to:"\u002Fsecurity\u002Fprivacy"},next:{slug:"aggregation",title:"Aggregation",to:"\u002Fcustomization\u002Faggregation"}}],fetch:[],mutations:[]}}("text","element","span","token","punctuation","\n"," ","keyword","li","operator",";","\\","\n\n","string","code","single-quoted-string","\n    ","language-php","package","GraphQL","function","Pepper","class-name","{","=","\n        ",",","}","\u003E","p","variable","(",")",2,"h2","a","true",-1,"icon","icon-link","div","nuxt-content-highlight","pre","line-numbers","use","[","]","Type","\n                ","php","delimiter","important","\u003C?php","namespace","App","Http","class","extends","return","$root","covered-fields","Covered fields","exposed-fields","Exposed fields","override-description","add-optional-fields","Add Optional Fields","User","protected","public","setOptionalFields","\n            ","\n                    ","-","2021-01-14T15:36:33.615Z")));